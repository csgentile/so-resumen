\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\BKM@entry[2]{}
\catcode `"\active 
\catcode `<\active 
\catcode `>\active 
\@nameuse{es@quoting}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\select@language{spanish}
\@writefile{toc}{\select@language{spanish}}
\@writefile{lof}{\select@language{spanish}}
\@writefile{lot}{\select@language{spanish}}
\BKM@entry{id=1,open,dest={636861707465722E31},srcline={97}}{3120496E74726F64756363695C3336336E}
\BKM@entry{id=2,open,dest={73656374696F6E2E312E31},srcline={99}}{312E31205C32373751755C33353120657320756E2053697374656D61204F706572617469766F3F}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Introducci\IeC {\'o}n}{3}{chapter.1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{loa}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {1.1}\IeC {\textquestiondown }Qu\IeC {\'e} es un Sistema Operativo?}{3}{section.1.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.1}{\ignorespaces Sistema operativo de prop\IeC {\'o}sito general.\relax }}{3}{figure.caption.1}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig01}{{1.1}{3}{Sistema operativo de propósito general.\relax }{figure.caption.1}{}}
\BKM@entry{id=3,open,dest={73756273656374696F6E2E312E312E31},srcline={125}}{312E312E31205265637572736F7320636F6D7061727469646F733A20656C2053697374656D61204F706572617469766F20636F6D6F205C33303172626974726F}
\BKM@entry{id=4,open,dest={73756273656374696F6E2E312E312E32},srcline={138}}{312E312E32204C696D69746163696F6E65732064656C20656E6D6173636172616D69656E746F3A20656C2053697374656D61204F706572617469766F20636F6D6F20496C7573696F6E69737461}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.1}Recursos compartidos: el Sistema Operativo como \IeC {\'A}rbitro}{4}{subsection.1.1.1}}
\BKM@entry{id=5,open,dest={73756273656374696F6E2E312E312E33},srcline={149}}{312E312E332050726F706F7263696F6E616E646F20736572766963696F7320656E20636F6D5C3337326E3A20656C2053697374656D61204F706572617469766F20636F6D6F20506567616D656E746F}
\BKM@entry{id=6,open,dest={73656374696F6E2E312E32},srcline={158}}{312E32204576616C756163695C3336336E2064656C2053697374656D61204F706572617469766F}
\BKM@entry{id=7,open,dest={73756273656374696F6E2E312E322E31},srcline={160}}{312E322E3120436F6E66696162696C69646164207920446973706F6E6962696C69646164}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.2}Limitaciones del enmascaramiento: el Sistema Operativo como Ilusionista}{5}{subsection.1.1.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.3}Proporcionando servicios en com\IeC {\'u}n: el Sistema Operativo como Pegamento}{5}{subsection.1.1.3}}
\@writefile{toc}{\contentsline {section}{\numberline {1.2}Evaluaci\IeC {\'o}n del Sistema Operativo}{5}{section.1.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.1}Confiabilidad y Disponibilidad}{5}{subsection.1.2.1}}
\BKM@entry{id=8,open,dest={73756273656374696F6E2E312E322E32},srcline={169}}{312E322E3220536567757269646164}
\BKM@entry{id=9,open,dest={73756273656374696F6E2E312E322E33},srcline={182}}{312E322E3320506F72746162696C69646164}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.2}Seguridad}{6}{subsection.1.2.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.3}Portabilidad}{6}{subsection.1.2.3}}
\BKM@entry{id=10,open,dest={73756273656374696F6E2E312E322E34},srcline={198}}{312E322E342052656E64696D69656E746F}
\BKM@entry{id=11,open,dest={73756273656374696F6E2E312E322E35},srcline={218}}{312E322E352041646F7063695C3336336E}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.4}Rendimiento}{7}{subsection.1.2.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.5}Adopci\IeC {\'o}n}{7}{subsection.1.2.5}}
\BKM@entry{id=12,open,dest={73756273656374696F6E2E312E322E36},srcline={227}}{312E322E3620436F6D70726F6D69736F7320646520446973655C3336316F}
\BKM@entry{id=13,open,dest={73656374696F6E2E312E33},srcline={231}}{312E332053697374656D6173204F706572617469766F733A2050617361646F2C2050726573656E746520792046757475726F}
\BKM@entry{id=14,open,dest={73756273656374696F6E2E312E332E31},srcline={234}}{312E332E3120496D706163746F206465206C61732074656E64656E63696173207465636E6F6C5C3336336769636173}
\BKM@entry{id=15,open,dest={73756273656374696F6E2E312E332E32},srcline={243}}{312E332E32205072696D65726F732053697374656D6173204F706572617469766F73}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.6}Compromisos de Dise\IeC {\~n}o}{8}{subsection.1.2.6}}
\@writefile{toc}{\contentsline {section}{\numberline {1.3}Sistemas Operativos: Pasado, Presente y Futuro}{8}{section.1.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.1}Impacto de las tendencias tecnol\IeC {\'o}gicas}{8}{subsection.1.3.1}}
\BKM@entry{id=16,open,dest={73756273656374696F6E2E312E332E33},srcline={248}}{312E332E332053697374656D6173204F706572617469766F73204D756C74692D5573756172696F}
\BKM@entry{id=17,open,dest={73756273656374696F6E2E312E332E34},srcline={256}}{312E332E342053697374656D6173204F706572617469766F73206465205469656D706F20436F6D7061727469646F}
\BKM@entry{id=18,open,dest={73756273656374696F6E2E312E332E35},srcline={264}}{312E332E352053697374656D6173204F706572617469766F73204D6F6465726E6F73}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.2}Primeros Sistemas Operativos}{9}{subsection.1.3.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.3}Sistemas Operativos Multi-Usuario}{9}{subsection.1.3.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.4}Sistemas Operativos de Tiempo Compartido}{9}{subsection.1.3.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.5}Sistemas Operativos Modernos}{10}{subsection.1.3.5}}
\BKM@entry{id=19,open,dest={73756273656374696F6E2E312E332E36},srcline={294}}{312E332E362053697374656D6173204F706572617469766F732046757475726F73}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.6}Sistemas Operativos Futuros}{11}{subsection.1.3.6}}
\BKM@entry{id=20,open,dest={636861707465722E32},srcline={307}}{32204C61204162737472616363695C3336336E2064656C204B65726E656C}
\BKM@entry{id=21,open,dest={73656374696F6E2E322E31},srcline={325}}{322E31204C61204162737472616363695C3336336E2064656C2050726F6365736F}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}La Abstracci\IeC {\'o}n del Kernel}{13}{chapter.2}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{loa}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}La Abstracci\IeC {\'o}n del Proceso}{13}{section.2.1}}
\BKM@entry{id=22,open,dest={73656374696F6E2E322E32},srcline={345}}{322E3220456C204D6F646F204475616C206465204F7065726163695C3336336E}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}El Modo Dual de Operaci\IeC {\'o}n}{14}{section.2.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.1}{\ignorespaces La operaci\IeC {\'o}n b\IeC {\'a}sica de una CPU.\relax }}{14}{figure.caption.2}}
\newlabel{fig02}{{2.1}{14}{La operación básica de una CPU.\relax }{figure.caption.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.2}{\ignorespaces El funcionamiento de una CPU con los modos kernel y usuario.\relax }}{15}{figure.caption.3}}
\newlabel{fig03}{{2.2}{15}{El funcionamiento de una CPU con los modos kernel y usuario.\relax }{figure.caption.3}{}}
\BKM@entry{id=23,open,dest={73756273656374696F6E2E322E322E31},srcline={381}}{322E322E3120496E737472756363696F6E65732050726976696C65676961646173}
\BKM@entry{id=24,open,dest={73756273656374696F6E2E322E322E32},srcline={391}}{322E322E322050726F74656363695C3336336E206465204D656D6F726961}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.1}Instrucciones Privilegiadas}{16}{subsection.2.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.2}Protecci\IeC {\'o}n de Memoria}{16}{subsection.2.2.2}}
\BKM@entry{id=25,open,dest={73756273656374696F6E2E322E322E33},srcline={423}}{322E322E3320496E74657272757063696F6E65732064656C2054656D706F72697A61646F72}
\@writefile{lof}{\contentsline {figure}{\numberline {2.3}{\ignorespaces M\IeC {\'e}todo Base-L\IeC {\'\i }mite de protecci\IeC {\'o}n de memoria usando direcciones f\IeC {\'\i }sicas.\relax }}{17}{figure.caption.4}}
\newlabel{fig04}{{2.3}{17}{Método Base-Límite de protección de memoria usando direcciones físicas.\relax }{figure.caption.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.3}Interrupciones del Temporizador}{17}{subsection.2.2.3}}
\BKM@entry{id=26,open,dest={73656374696F6E2E322E33},srcline={434}}{322E33205469706F73206465204D6F646F206465205472616E73666572656E636961}
\BKM@entry{id=27,open,dest={73756273656374696F6E2E322E332E31},srcline={438}}{322E332E312044656C206D6F646F205573756172696F20616C206D6F646F204B65726E656C}
\@writefile{toc}{\contentsline {section}{\numberline {2.3}Tipos de Modo de Transferencia}{18}{section.2.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.1}Del modo Usuario al modo Kernel}{18}{subsection.2.3.1}}
\BKM@entry{id=28,open,dest={73756273656374696F6E2E322E332E32},srcline={464}}{322E332E322044656C206D6F646F204B65726E656C20616C206D6F646F205573756172696F}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.2}Del modo Kernel al modo Usuario}{19}{subsection.2.3.2}}
\BKM@entry{id=29,open,dest={73656374696F6E2E322E34},srcline={477}}{322E3420496D706C656D656E746163695C3336336E206465206C61205472616E73666572656E63696120656E204D6F646F2053656775726F}
\BKM@entry{id=30,open,dest={73756273656374696F6E2E322E342E31},srcline={495}}{322E342E31205461626C6120766563746F7269616C20646520696E74657272757063695C3336336E}
\@writefile{toc}{\contentsline {section}{\numberline {2.4}Implementaci\IeC {\'o}n de la Transferencia en Modo Seguro}{20}{section.2.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4.1}Tabla vectorial de interrupci\IeC {\'o}n}{20}{subsection.2.4.1}}
\BKM@entry{id=31,open,dest={73756273656374696F6E2E322E342E32},srcline={509}}{322E342E322050696C6120646520496E74657272757063696F6E6573}
\@writefile{lof}{\contentsline {figure}{\numberline {2.4}{\ignorespaces Tabla vectorial de interrupciones: se enumeran las rutinas del n\IeC {\'u}cleo para manejar varias interrupciones de hardware, excepciones del procesador, y las llamadas al sistema.\relax }}{21}{figure.caption.5}}
\newlabel{fig0}{{2.4}{21}{Tabla vectorial de interrupciones: se enumeran las rutinas del núcleo para manejar varias interrupciones de hardware, excepciones del procesador, y las llamadas al sistema.\relax }{figure.caption.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4.2}Pila de Interrupciones}{21}{subsection.2.4.2}}
\BKM@entry{id=32,open,dest={73756273656374696F6E2E322E342E33},srcline={526}}{322E342E3320446F732050696C617320706F722050726F6365736F}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4.3}Dos Pilas por Proceso}{22}{subsection.2.4.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.5}{\ignorespaces En la mayor\IeC {\'\i }a de sistemas operativos, un proceso tiene dos pilas: una para ejecutar c\IeC {\'o}digo de usuario y una para el c\IeC {\'o}digo del kernel.\relax }}{22}{figure.caption.6}}
\newlabel{fig06}{{2.5}{22}{En la mayoría de sistemas operativos, un proceso tiene dos pilas: una para ejecutar código de usuario y una para el código del kernel.\relax }{figure.caption.6}{}}
\BKM@entry{id=33,open,dest={73756273656374696F6E2E322E342E34},srcline={550}}{322E342E3420456C20656E6D6173636172616D69656E746F20646520696E74657272757063696F6E6573}
\BKM@entry{id=34,open,dest={73756273656374696F6E2E322E342E35},srcline={559}}{322E342E3520536F706F727465206465204861726477617265207061726120656C2041686F72726F207920526573746175726163695C3336336E20646520526567697374726F73}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4.4}El enmascaramiento de interrupciones}{23}{subsection.2.4.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4.5}Soporte de Hardware para el Ahorro y Restauraci\IeC {\'o}n de Registros}{23}{subsection.2.4.5}}
\BKM@entry{id=35,open,dest={73656374696F6E2E322E35},srcline={577}}{322E3520506F6E69656E646F20746F646F206A756E746F3A204D6F646F206465205472616E73666572656E63696120783836}
\@writefile{toc}{\contentsline {section}{\numberline {2.5}Poniendo todo junto: Modo de Transferencia x86}{24}{section.2.5}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.6}{\ignorespaces Estado del sistema antes de un manejador de interrupciones se invoca en la arquitectura x86. SS es el segmento de pila, ESP es el puntero de pila, CS es el segmento de c\IeC {\'o}digo, y EIP es el contador de programa. El contador de programa y puntero de pila se refiere a lugares en el proceso de usuario, y la pila de interrupci\IeC {\'o}n est\IeC {\'a} vac\IeC {\'\i }a.\relax }}{24}{figure.caption.7}}
\newlabel{fig07}{{2.6}{24}{Estado del sistema antes de un manejador de interrupciones se invoca en la arquitectura x86. SS es el segmento de pila, ESP es el puntero de pila, CS es el segmento de código, y EIP es el contador de programa. El contador de programa y puntero de pila se refiere a lugares en el proceso de usuario, y la pila de interrupción está vacía.\relax }{figure.caption.7}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.7}{\ignorespaces Estado del sistema despu\IeC {\'e}s de que el hardware x$86$ ha saltado al manejador de interrupciones. El hardware ahorra el contexto de usuario en la pila de interrupci\IeC {\'o}n del n\IeC {\'u}cleo y cambia el contador de programa / pila a ubicaciones en la memoria del n\IeC {\'u}cleo.\relax }}{25}{figure.caption.8}}
\newlabel{fig08}{{2.7}{25}{Estado del sistema después de que el hardware x$86$ ha saltado al manejador de interrupciones. El hardware ahorra el contexto de usuario en la pila de interrupción del núcleo y cambia el contador de programa / pila a ubicaciones en la memoria del núcleo.\relax }{figure.caption.8}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.8}{\ignorespaces  Estado del sistema despu\IeC {\'e}s de que el controlador de interrupciones ha comenzado a ejecutar en la arquitectura x86. El controlador de guarda primero el estado actual de los registros del procesador, ya que puede sobrescribir ellos. Tenga en cuenta que esto ahorra el puntero de pila doble: en primer lugar, la pila de usuario puntero a continuaci\IeC {\'o}n, el puntero de pila del n\IeC {\'u}cleo.\relax }}{26}{figure.caption.9}}
\newlabel{fig09}{{2.8}{26}{Estado del sistema después de que el controlador de interrupciones ha comenzado a ejecutar en la arquitectura x86. El controlador de guarda primero el estado actual de los registros del procesador, ya que puede sobrescribir ellos. Tenga en cuenta que esto ahorra el puntero de pila doble: en primer lugar, la pila de usuario puntero a continuación, el puntero de pila del núcleo.\relax }{figure.caption.9}{}}
\BKM@entry{id=36,open,dest={73656374696F6E2E322E36},srcline={635}}{322E3620496D706C656D656E746163695C3336336E206465206C6173204C6C616D6164617320616C2053697374656D61}
\@writefile{toc}{\contentsline {section}{\numberline {2.6}Implementaci\IeC {\'o}n de las Llamadas al Sistema}{27}{section.2.6}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.9}{\ignorespaces Un par de \textit  {stubs} media entre la llamada a nivel de usuario y la aplicaci\IeC {\'o}n de la llamada en el n\IeC {\'u}cleo. El c\IeC {\'o}digo para la llamada al sistema es \textit  {file \_ open}; otras llamadas tienen sus propios \textit  {stubs}. $(1)$ El proceso de usuario realiza una llamada a procedimiento normal a un \textit  {stub} vinculados con el proceso. $(2)$ El stub ejecuta la instrucci\IeC {\'o}n \textit  {trap}. Esto transfiere el control al manejador \textit  {trap} del kernel. Las copia al controlador \textit  {trap} y comprueba sus argumentos y despu\IeC {\'e}s $(3)$ llama a una rutina para hacer la operaci\IeC {\'o}n. Una vez completada la operaci\IeC {\'o}n, $(4)$ el c\IeC {\'o}digo devuelve al controlador de la \textit  {trap}, que copia el valor de retorno en la memoria de usuario y $(5)$ se reanuda el \textit  {stub} del usuario inmediatamente despu\IeC {\'e}s de la \textit  {trap}. $(6)$ El \textit  {stub} de usuario vuelve a la persona que llama a nivel de usuario.\relax }}{28}{figure.caption.10}}
\newlabel{fig10}{{2.9}{28}{Un par de \textit {stubs} media entre la llamada a nivel de usuario y la aplicación de la llamada en el núcleo. El código para la llamada al sistema es \textit {file \_ open}; otras llamadas tienen sus propios \textit {stubs}. $(1)$ El proceso de usuario realiza una llamada a procedimiento normal a un \textit {stub} vinculados con el proceso. $(2)$ El stub ejecuta la instrucción \textit {trap}. Esto transfiere el control al manejador \textit {trap} del kernel. Las copia al controlador \textit {trap} y comprueba sus argumentos y después $(3)$ llama a una rutina para hacer la operación. Una vez completada la operación, $(4)$ el código devuelve al controlador de la \textit {trap}, que copia el valor de retorno en la memoria de usuario y $(5)$ se reanuda el \textit {stub} del usuario inmediatamente después de la \textit {trap}. $(6)$ El \textit {stub} de usuario vuelve a la persona que llama a nivel de usuario.\relax }{figure.caption.10}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.10}{\ignorespaces \textit  {Stub} de la biblioteca a nivel de usuario para el sistema de archivos de llamada al sistema abierto para el procesador x$86$. \textit  {SysCallOpen} es el c\IeC {\'o}digo de la llamada al sistema espec\IeC {\'\i }fico para funcionar. \textit  {TrapCode} es el \IeC {\'\i }ndice en la tabla de vectores de interrupci\IeC {\'o}n x$86$ para el controlador de llamada al sistema.\relax }}{28}{figure.caption.11}}
\newlabel{fig11}{{2.10}{28}{\textit {Stub} de la biblioteca a nivel de usuario para el sistema de archivos de llamada al sistema abierto para el procesador x$86$. \textit {SysCallOpen} es el código de la llamada al sistema específico para funcionar. \textit {TrapCode} es el índice en la tabla de vectores de interrupción x$86$ para el controlador de llamada al sistema.\relax }{figure.caption.11}{}}
\BKM@entry{id=37,open,dest={73656374696F6E2E322E37},srcline={689}}{322E3720496E6963696F20646520756E206E7565766F2070726F6365736F}
\@writefile{toc}{\contentsline {section}{\numberline {2.7}Inicio de un nuevo proceso}{29}{section.2.7}}
\BKM@entry{id=38,open,dest={636861707465722E33},srcline={712}}{33204C6120696E74657266617A2064652070726F6772616D6163695C3336336E}
\@writefile{toc}{\contentsline {chapter}{\numberline {3}La interfaz de programaci\IeC {\'o}n}{31}{chapter.3}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{loa}{\addvspace {10\p@ }}
\BKM@entry{id=39,open,dest={73656374696F6E2E332E31},srcline={772}}{332E312047657374695C3336336E2064652050726F6365736F73}
\@writefile{lof}{\contentsline {figure}{\numberline {3.1}{\ignorespaces La funcionalidad del sistema operativo puede ser implementada en programas a nivel de usuario, en las bibliotecas a nivel de usuario, en el propio n\IeC {\'u}cleo, o en un servidor de nivel de usuario invocado por el n\IeC {\'u}cleo.\relax }}{32}{figure.caption.12}}
\newlabel{fig12}{{3.1}{32}{La funcionalidad del sistema operativo puede ser implementada en programas a nivel de usuario, en las bibliotecas a nivel de usuario, en el propio núcleo, o en un servidor de nivel de usuario invocado por el núcleo.\relax }{figure.caption.12}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.1}Gesti\IeC {\'o}n de Procesos}{32}{section.3.1}}
\BKM@entry{id=40,open,dest={73756273656374696F6E2E332E312E31},srcline={779}}{332E312E312047657374695C3336336E2064652050726F6365736F732064652057696E646F7773}
\BKM@entry{id=41,open,dest={73756273656374696F6E2E332E312E32},srcline={795}}{332E312E322047657374695C3336336E2064652050726F6365736F7320646520554E4958}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.1}Gesti\IeC {\'o}n de Procesos de Windows}{33}{subsection.3.1.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.2}Gesti\IeC {\'o}n de Procesos de UNIX}{33}{subsection.3.1.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.2}{\ignorespaces El funcionamiento de las llamadas \textit  {fork()} y \textit  {exec()}. \textit  {fork()} hace una copia del proceso padre; UNIX \textit  {exec()} cambia el proceso hijo para ejecutar el nuevo programa.\relax }}{34}{figure.caption.13}}
\newlabel{fig13}{{3.2}{34}{El funcionamiento de las llamadas \textit {fork()} y \textit {exec()}. \textit {fork()} hace una copia del proceso padre; UNIX \textit {exec()} cambia el proceso hijo para ejecutar el nuevo programa.\relax }{figure.caption.13}{}}
\BKM@entry{id=42,open,dest={73656374696F6E2E332E32},srcline={835}}{332E3220457374727563747572612064656C2053697374656D61204F706572617469766F}
\BKM@entry{id=43,open,dest={73756273656374696F6E2E332E322E31},srcline={849}}{332E322E31204E5C333732636C656F73206D6F6E6F6C5C3335357469636F73}
\@writefile{toc}{\contentsline {section}{\numberline {3.2}Estructura del Sistema Operativo}{35}{section.3.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.1}N\IeC {\'u}cleos monol\IeC {\'\i }ticos}{35}{subsection.3.2.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.3}{\ignorespaces En un n\IeC {\'u}cleo de sistema operativo monol\IeC {\'\i }tico, la mayor parte de la funcionalidad del sistema operativo est\IeC {\'a} relacionado entre s\IeC {\'\i } dentro del n\IeC {\'u}cleo. Los m\IeC {\'o}dulos del kernel llaman directamente a otros m\IeC {\'o}dulos del kernel para realizar las funciones necesarias. Por ejemplo, el sistema de memoria virtual utiliza gesti\IeC {\'o}n de memoria intermedia, la sincronizaci\IeC {\'o}n, y la capa de abstracci\IeC {\'o}n de hardware.\relax }}{35}{figure.caption.14}}
\newlabel{fig14}{{3.3}{35}{En un núcleo de sistema operativo monolítico, la mayor parte de la funcionalidad del sistema operativo está relacionado entre sí dentro del núcleo. Los módulos del kernel llaman directamente a otros módulos del kernel para realizar las funciones necesarias. Por ejemplo, el sistema de memoria virtual utiliza gestión de memoria intermedia, la sincronización, y la capa de abstracción de hardware.\relax }{figure.caption.14}{}}
\BKM@entry{id=44,open,dest={73756273656374696F6E2E332E322E32},srcline={896}}{332E322E32204D6963726F4B65726E656C73}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.2}MicroKernels}{37}{subsection.3.2.2}}
\BKM@entry{id=45,open,dest={636861707465722E34},srcline={904}}{3420436F6E63757272656E63696120652048696C6F73}
\@writefile{toc}{\contentsline {chapter}{\numberline {4}Concurrencia e Hilos}{39}{chapter.4}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{loa}{\addvspace {10\p@ }}
\BKM@entry{id=46,open,dest={73656374696F6E2E342E31},srcline={927}}{342E31204361736F732064652075736F206465206C6F732048696C6F73}
\BKM@entry{id=47,open,dest={73756273656374696F6E2E342E312E31},srcline={934}}{342E312E312043756174726F2072617A6F6E6573207061726120757361722048696C6F73}
\@writefile{toc}{\contentsline {section}{\numberline {4.1}Casos de uso de los Hilos}{40}{section.4.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.1}Cuatro razones para usar Hilos}{40}{subsection.4.1.1}}
\BKM@entry{id=48,open,dest={73656374696F6E2E342E32},srcline={952}}{342E32204162737472616363695C3336336E2064652048696C6F}
\BKM@entry{id=49,open,dest={73756273656374696F6E2E342E322E31},srcline={960}}{342E322E3120456A65637563695C3336336E2C2053757370656E63695C3336336E2079205265616E75646163695C3336336E2064652048696C6F73}
\BKM@entry{id=50,open,dest={73756273656374696F6E2E342E322E32},srcline={985}}{342E322E3220506F722071755C333531206C612056656C6F6369646164205661726961626C653F}
\@writefile{toc}{\contentsline {section}{\numberline {4.2}Abstracci\IeC {\'o}n de Hilo}{41}{section.4.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.1}Ejecuci\IeC {\'o}n, Suspenci\IeC {\'o}n y Reanudaci\IeC {\'o}n de Hilos}{41}{subsection.4.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.2}Por qu\IeC {\'e} la Velocidad Variable?}{41}{subsection.4.2.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.1}{\ignorespaces Tres posibles formas en que un hilo puede ejecutar, todos los cuales son equivalentes al programador.\relax }}{42}{figure.caption.15}}
\newlabel{fig15}{{4.1}{42}{Tres posibles formas en que un hilo puede ejecutar, todos los cuales son equivalentes al programador.\relax }{figure.caption.15}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.2}{\ignorespaces Algunas de las muchas maneras posibles que podr\IeC {\'\i }an ser tres hilos intercalados en tiempo de ejecuci\IeC {\'o}n.\relax }}{42}{figure.caption.16}}
\newlabel{fig16}{{4.2}{42}{Algunas de las muchas maneras posibles que podrían ser tres hilos intercalados en tiempo de ejecución.\relax }{figure.caption.16}{}}
\BKM@entry{id=51,open,dest={73656374696F6E2E342E33},srcline={996}}{342E33204150492064652048696C6F2053696D706C65}
\BKM@entry{id=52,open,dest={73756273656374696F6E2E342E332E31},srcline={1001}}{342E332E3120506172616C656C69736D6F20666F726B2D6A6F696E}
\BKM@entry{id=53,open,dest={73656374696F6E2E342E34},srcline={1006}}{342E342045737472756374757261206465204461746F732079204369636C6F206465205669646120646520756E2048696C6F}
\@writefile{toc}{\contentsline {section}{\numberline {4.3}API de Hilo Simple}{43}{section.4.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3.1}Paralelismo fork-join}{43}{subsection.4.3.1}}
\@writefile{toc}{\contentsline {section}{\numberline {4.4}Estructura de Datos y Ciclo de Vida de un Hilo}{43}{section.4.4}}
\BKM@entry{id=54,open,dest={73756273656374696F6E2E342E342E31},srcline={1011}}{342E342E3120426C6F71756520646520436F6E74726F6C20646520756E2048696C6F2079207375732045737461646F73202D20544342}
\BKM@entry{id=55,open,dest={73756273656374696F6E2E342E342E32},srcline={1034}}{342E342E322045737461646F7320436F6D7061727469646F73}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4.1}Bloque de Control de un Hilo y sus Estados - TCB}{44}{subsection.4.4.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4.2}Estados Compartidos}{44}{subsection.4.4.2}}
\BKM@entry{id=56,open,dest={73656374696F6E2E342E35},srcline={1041}}{342E35204369636C6F206465205669646120646520756E2048696C6F}
\@writefile{toc}{\contentsline {section}{\numberline {4.5}Ciclo de Vida de un Hilo}{45}{section.4.5}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.3}{\ignorespaces Los estados de un hilo durante su vida \IeC {\'u}til.\relax }}{45}{figure.caption.17}}
\newlabel{fig17}{{4.3}{45}{Los estados de un hilo durante su vida útil.\relax }{figure.caption.17}{}}
\BKM@entry{id=57,open,dest={73656374696F6E2E342E36},srcline={1067}}{342E3620496D706C656D656E746163696F6E2064652048696C6F7320656E20656C204B65726E656C}
\BKM@entry{id=58,open,dest={73756273656374696F6E2E342E362E31},srcline={1079}}{342E362E31204372656163695C3336336E20646520756E2048696C6F}
\BKM@entry{id=59,open,dest={73756273656374696F6E2E342E362E32},srcline={1089}}{342E362E3220456C696D696E6163695C3336336E20646520756E2048696C6F}
\@writefile{toc}{\contentsline {section}{\numberline {4.6}Implementacion de Hilos en el Kernel}{46}{section.4.6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.6.1}Creaci\IeC {\'o}n de un Hilo}{46}{subsection.4.6.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.6.2}Eliminaci\IeC {\'o}n de un Hilo}{46}{subsection.4.6.2}}
\BKM@entry{id=60,open,dest={73756273656374696F6E2E342E362E33},srcline={1102}}{342E362E332043616D62696F20646520636F6E746578746F207061726120756E2068696C6F202D2054687265616420436F6E7465787420537769746368}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.6.3}Cambio de contexto para un hilo - Thread Context Switch}{47}{subsection.4.6.3}}
\BKM@entry{id=61,open,dest={73656374696F6E2E342E37},srcline={1155}}{342E3720436F6D62696E616E646F2068696C6F732064656C204E5C333732636C656F207920756E205C3337326E69636F2073756270726F6365736F206465205573756172696F}
\@writefile{toc}{\contentsline {section}{\numberline {4.7}Combinando hilos del N\IeC {\'u}cleo y un \IeC {\'u}nico subproceso de Usuario}{48}{section.4.7}}
\BKM@entry{id=62,open,dest={73656374696F6E2E342E38},srcline={1168}}{342E3820496D706C656D656E746163695C3336336E2064652050726F6365736F73204D756C746968696C6F}
\BKM@entry{id=63,open,dest={73756273656374696F6E2E342E382E31},srcline={1171}}{342E382E3120496D706C656D656E746163695C3336336E2064652070726F6365736F73206D756C746968696C6F2071756520686163656E2075736F206465206C6F732068696C6F732064656C206B65726E656C}
\BKM@entry{id=64,open,dest={73756273656374696F6E2E342E382E32},srcline={1185}}{342E382E32204C612041706C69636163695C3336336E2064652048696C6F732061204E6976656C206465205573756172696F202D2053696E20536F706F7274652064656C204E5C333732636C656F}
\@writefile{toc}{\contentsline {section}{\numberline {4.8}Implementaci\IeC {\'o}n de Procesos Multihilo}{49}{section.4.8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.8.1}Implementaci\IeC {\'o}n de procesos multihilo que hacen uso de los hilos del kernel}{49}{subsection.4.8.1}}
\BKM@entry{id=65,open,dest={73756273656374696F6E2E342E382E33},srcline={1208}}{342E382E3320496D706C656D656E746163695C3336336E2064652048696C6F732061204E6976656C206465205573756172696F202D20436F6E20536F706F7274652064656C204E5C333732636C656F}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.8.2}La Aplicaci\IeC {\'o}n de Hilos a Nivel de Usuario - Sin Soporte del N\IeC {\'u}cleo}{50}{subsection.4.8.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.8.3}Implementaci\IeC {\'o}n de Hilos a Nivel de Usuario - Con Soporte del N\IeC {\'u}cleo}{50}{subsection.4.8.3}}
\BKM@entry{id=66,open,dest={636861707465722E35},srcline={1242}}{352053696E63726F6E697A6163695C3336336E2064652061636365736F2061206C6F73206F626A65746F7320636F6D7061727469646F73}
\@writefile{toc}{\contentsline {chapter}{\numberline {5}Sincronizaci\IeC {\'o}n de acceso a los objetos compartidos}{53}{chapter.5}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{loa}{\addvspace {10\p@ }}
\BKM@entry{id=67,open,dest={73656374696F6E2E352E31},srcline={1269}}{352E31204368616C6C656E676573202D2044657361665C3335356F73}
\BKM@entry{id=68,open,dest={73756273656374696F6E2E352E312E31},srcline={1272}}{352E312E3120436F6E646963696F6E65732064652043617272657261}
\BKM@entry{id=69,open,dest={73756273656374696F6E2E352E312E32},srcline={1282}}{352E312E32204F7065726163696F6E65732041745C3336336D69636173}
\BKM@entry{id=70,open,dest={73756273656374696F6E2E352E312E33},srcline={1287}}{352E312E3320546F6F204D756368204D696C6B202D2044656D617369616461204C65636865}
\@writefile{toc}{\contentsline {section}{\numberline {5.1}Challenges - Desaf\IeC {\'\i }os}{54}{section.5.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.1}Condiciones de Carrera}{54}{subsection.5.1.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.2}Operaciones At\IeC {\'o}micas}{54}{subsection.5.1.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.3}Too Much Milk - Demasiada Leche}{55}{subsection.5.1.3}}
\BKM@entry{id=71,open,dest={73756273656374696F6E2E352E312E34},srcline={1323}}{352E312E3420446973637573695C3336336E}
\BKM@entry{id=72,open,dest={73656374696F6E2E352E32},srcline={1331}}{352E32204C612065737472756374757261206465206C6F73206F626A65746F7320636F6D7061727469646F73}
\BKM@entry{id=73,open,dest={73756273656374696F6E2E352E322E31},srcline={1348}}{352E322E31204C6120696D706C656D656E746163695C3336336E206465206F626A65746F7320636F6D7061727469646F73}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.4}Discusi\IeC {\'o}n}{56}{subsection.5.1.4}}
\@writefile{toc}{\contentsline {section}{\numberline {5.2}La estructura de los objetos compartidos}{56}{section.5.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.1}{\ignorespaces En un programa multi-hilo, hilos est\IeC {\'a}n separados y operan simult\IeC {\'a}neamente en objetos compartidos. Los objetos compartidos contienen ambas variables de estado y sincronizaci\IeC {\'o}n compartidos, que se utilizan para controlar el acceso concurrente a estado compartido..\relax }}{57}{figure.caption.18}}
\newlabel{fig18}{{5.1}{57}{En un programa multi-hilo, hilos están separados y operan simultáneamente en objetos compartidos. Los objetos compartidos contienen ambas variables de estado y sincronización compartidos, que se utilizan para controlar el acceso concurrente a estado compartido..\relax }{figure.caption.18}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2.1}La implementaci\IeC {\'o}n de objetos compartidos}{57}{subsection.5.2.1}}
\BKM@entry{id=74,open,dest={73756273656374696F6E2E352E322E32},srcline={1367}}{352E322E3220416C63616E6365207920486F6A612064652052757461}
\BKM@entry{id=75,open,dest={73656374696F6E2E352E33},srcline={1370}}{352E33204C6F636B73205C28426C6F7175656F735C293A204578636C7573695C3336336E204D75747561}
\BKM@entry{id=76,open,dest={73756273656374696F6E2E352E332E31},srcline={1383}}{352E332E3120436572726164757261733A2041504920792050726F7069656461646573}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2.2}Alcance y Hoja de Ruta}{58}{subsection.5.2.2}}
\@writefile{toc}{\contentsline {section}{\numberline {5.3}Locks (Bloqueos): Exclusi\IeC {\'o}n Mutua}{58}{section.5.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3.1}Cerraduras: API y Propiedades}{58}{subsection.5.3.1}}
\BKM@entry{id=77,open,dest={636861707465722E36},srcline={1395}}{36205C30343037205363686564756C696E67202D20506C616E696669636163695C3336336E}
\BKM@entry{id=78,open,dest={73656374696F6E2E362E31},srcline={1420}}{362E3120372E3120506C616E696669636163695C3336336E20646520756E20736F6C6F2050726F63657361646F72}
\@writefile{toc}{\contentsline {chapter}{\numberline {6} 7 Scheduling - Planificaci\IeC {\'o}n}{61}{chapter.6}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{loa}{\addvspace {10\p@ }}
\BKM@entry{id=79,open,dest={73756273656374696F6E2E362E312E31},srcline={1431}}{362E312E3120372E312E31205072696D65726F20656E20656E747261722C207072696D65726F20656E2073616C6972205C284649464F5C29}
\BKM@entry{id=80,open,dest={73756273656374696F6E2E362E312E32},srcline={1444}}{362E312E3220372E312E3220456C2074726162616A6F206D5C3334317320636F72746F207072696D65726F205C28534A465C29}
\@writefile{toc}{\contentsline {section}{\numberline {6.1}7.1 Planificaci\IeC {\'o}n de un solo Procesador}{62}{section.6.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.1}7.1.1 Primero en entrar, primero en salir (FIFO)}{62}{subsection.6.1.1}}
\BKM@entry{id=81,open,dest={73756273656374696F6E2E362E312E33},srcline={1465}}{362E312E3320372E312E3320526F756E6420526F62696E}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.2}7.1.2 El trabajo m\IeC {\'a}s corto primero (SJF)}{63}{subsection.6.1.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.3}7.1.3 Round Robin}{63}{subsection.6.1.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.1}{\ignorespaces Los tiempos de finalizaci\IeC {\'o}n con FIFO (arriba) y SJF (abajo) de la planificaci\IeC {\'o}n cuando varias tareas cortas ($2-5$) llegan inmediatamente despu\IeC {\'e}s de una tarea larga ($1$).\relax }}{64}{figure.caption.19}}
\newlabel{fig0701}{{6.1}{64}{Los tiempos de finalización con FIFO (arriba) y SJF (abajo) de la planificación cuando varias tareas cortas ($2-5$) llegan inmediatamente después de una tarea larga ($1$).\relax }{figure.caption.19}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.2}{\ignorespaces Tiempos de finalizaci\IeC {\'o}n con la programaci\IeC {\'o}n Round Robin cuando llegan tareas cortas justo despu\IeC {\'e}s de una tarea larga, con un tiempo de 1 ms (arriba) y 100 ms (abajo).\relax }}{64}{figure.caption.20}}
\newlabel{fig0702}{{6.2}{64}{Tiempos de finalización con la programación Round Robin cuando llegan tareas cortas justo después de una tarea larga, con un tiempo de 1 ms (arriba) y 100 ms (abajo).\relax }{figure.caption.20}{}}
\BKM@entry{id=82,open,dest={73756273656374696F6E2E362E312E34},srcline={1489}}{362E312E3420372E312E34204D61782D4D696E20466169726E657373202D2045717569646164206D5C33343178696D612D6D5C3335356E696D61}
\@writefile{lof}{\contentsline {figure}{\numberline {6.3}{\ignorespaces Tiempos de finalizaci\IeC {\'o}n con Round Robin (arriba) frente a FIFO y SJF (abajo) al programar tareas de igual longitud.\relax }}{65}{figure.caption.21}}
\newlabel{fig0703}{{6.3}{65}{Tiempos de finalización con Round Robin (arriba) frente a FIFO y SJF (abajo) al programar tareas de igual longitud.\relax }{figure.caption.21}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.4}7.1.4 Max-Min Fairness - Equidad m\IeC {\'a}xima-m\IeC {\'\i }nima}{65}{subsection.6.1.4}}
\BKM@entry{id=83,open,dest={73756273656374696F6E2E362E312E35},srcline={1510}}{362E312E3520372E312E35204361736F206465204573747564696F3A204D756C74692D4C6576656C20466565646261636B205C28526574726F616C696D656E746163695C3336336E204D756C74696E6976656C5C29}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.5}7.1.5 Caso de Estudio: Multi-Level Feedback (Retroalimentaci\IeC {\'o}n Multinivel)}{66}{subsection.6.1.5}}
\BKM@entry{id=84,open,dest={73756273656374696F6E2E362E312E36},srcline={1530}}{362E312E3620372E312E362053756D6D617279202D20526573756D656E}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.6}7.1.6 Summary - Resumen}{67}{subsection.6.1.6}}
\BKM@entry{id=85,open,dest={636861707465722E37},srcline={1545}}{372031312046696C652053797374656D73202D2053697374656D61206465204172636869766F733A20496E74726F64756363695C3336336E207920566973695C3336336E2047656E6572616C}
\@writefile{toc}{\contentsline {chapter}{\numberline {7}11 File Systems - Sistema de Archivos: Introducci\IeC {\'o}n y Visi\IeC {\'o}n General}{69}{chapter.7}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{loa}{\addvspace {10\p@ }}
\BKM@entry{id=86,open,dest={73656374696F6E2E372E31},srcline={1599}}{372E312031312E31204C61206162737472616363695C3336336E2064656C2073697374656D61206465206172636869766F73}
\@writefile{toc}{\contentsline {section}{\numberline {7.1}11.1 La abstracci\IeC {\'o}n del sistema de archivos}{70}{section.7.1}}
\BKM@entry{id=87,open,dest={73656374696F6E2E372E32},srcline={1656}}{372E322031312E3220415049}
\@writefile{lof}{\contentsline {figure}{\numberline {7.1}{\ignorespaces Este disco USB contiene un volumen que es el almacenamiento f\IeC {\'\i }sico para un sistema de archivos.\relax }}{72}{figure.caption.22}}
\newlabel{fig1101}{{7.1}{72}{Este disco USB contiene un volumen que es el almacenamiento físico para un sistema de archivos.\relax }{figure.caption.22}{}}
\@writefile{toc}{\contentsline {section}{\numberline {7.2}11.2 API}{72}{section.7.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {7.2}{\ignorespaces Un volumen puede montarse en otro sistema de archivos para unirse a sus jerarqu\IeC {\'\i }as de directorios. Por ejemplo, cuando la unidad USB est\IeC {\'a} conectada al ordenador de Alice, puede acceder a la pel\IeC {\'\i }cula vacation.mov usando la ruta /Volumes/usb1/Movies/vacation.mov y cuando la unidad est\IeC {\'a} conectada al ordenador de Bob, puede acceder a la pel\IeC {\'\i }cula Utilizando la ruta /media/disk-1/Movies/vacation.mov.\relax }}{73}{figure.caption.23}}
\newlabel{fig1102}{{7.2}{73}{Un volumen puede montarse en otro sistema de archivos para unirse a sus jerarquías de directorios. Por ejemplo, cuando la unidad USB está conectada al ordenador de Alice, puede acceder a la película vacation.mov usando la ruta /Volumes/usb1/Movies/vacation.mov y cuando la unidad está conectada al ordenador de Bob, puede acceder a la película Utilizando la ruta /media/disk-1/Movies/vacation.mov.\relax }{figure.caption.23}{}}
\citation{*}
\bibstyle{resumen}
\bibdata{resumen}
